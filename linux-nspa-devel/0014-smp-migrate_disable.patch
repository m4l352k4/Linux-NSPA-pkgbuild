From 5ab58b8a87ca733df77fe735688a030665ddd7a7 Mon Sep 17 00:00:00 2001
From: Sultan Alsawaf <sultan@kerneltoast.com>
Date: Wed, 11 May 2022 01:40:17 -0700
Subject: [PATCH] smp: Use migrate disable/enable in
 smp_call_function_single_async()

Asynchronous IPI users must already handle csd object lifetimes on their
own, so there's no need to prevent re-entrancy on a single CPU inside
smp_call_function_single_async(). As such, smp_call_function_single_async()
can be made more RT-friendly by just using migrate enable/disable instead
of disabling preemption, since preventing migration is all that's needed.

Signed-off-by: Sultan Alsawaf <sultan@kerneltoast.com>
---
 kernel/smp.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/smp.c b/kernel/smp.c
index 897361de9f5f..84b9f18016dc 100644
--- a/kernel/smp.c
+++ b/kernel/smp.c
@@ -806,7 +806,7 @@ int smp_call_function_single_async(int c
 {
 	int err = 0;
 
-	preempt_disable();
+	migrate_disable();
 
 	if (csd->node.u_flags & CSD_FLAG_LOCK) {
 		err = -EBUSY;
@@ -819,7 +819,7 @@ int smp_call_function_single_async(int c
 	err = generic_exec_single(cpu, csd);
 
 out:
-	preempt_enable();
+	migrate_enable();
 
 	return err;
 }

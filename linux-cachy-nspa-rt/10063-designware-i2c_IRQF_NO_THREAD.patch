--- a/drivers/i2c/busses/i2c-designware-slave.c	2022-01-18 13:11:45.407804876 -0500
+++ b/drivers/i2c/busses/i2c-designware-slave.c	2022-01-18 13:10:02.490862460 -0500
@@ -276,7 +276,7 @@ int i2c_dw_probe_slave(struct dw_i2c_dev
 	i2c_set_adapdata(adap, dev);
 
 	ret = devm_request_irq(dev->dev, dev->irq, i2c_dw_isr_slave,
-			       IRQF_SHARED, dev_name(dev->dev), dev);
+			       IRQF_SHARED | IRQF_NO_THREAD, dev_name(dev->dev), dev);
 	if (ret) {
 		dev_err(dev->dev, "failure requesting irq %i: %d\n",
 			dev->irq, ret);
	
--- a/drivers/i2c/busses/i2c-designware-master.c	2022-01-18 13:11:16.992820529 -0500
+++ b/drivers/i2c/busses/i2c-designware-master.c	2022-01-18 13:11:08.534825213 -0500
@@ -897,9 +897,9 @@ int i2c_dw_probe_master(struct dw_i2c_de
 		return amd_i2c_adap_quirk(dev);
 
 	if (dev->flags & ACCESS_NO_IRQ_SUSPEND) {
-		irq_flags = IRQF_NO_SUSPEND;
+		irq_flags = IRQF_NO_SUSPEND | IRQF_NO_THREAD;
 	} else {
-		irq_flags = IRQF_SHARED | IRQF_COND_SUSPEND;
+		irq_flags = IRQF_SHARED | IRQF_COND_SUSPEND | IRQF_NO_THREAD;
 	}
 
 	i2c_dw_disable_int(dev);

